services:
  api:
    build: ./api
    ports:
      - "${API_PORT}:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL}
      - FACE_RECOGNITION_URL=${FACE_RECOGNITION_URL}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_BUCKET_NAME=${SUPABASE_BUCKET_NAME}
      - MQTT_BROKER_ADDRESS=${MQTT_BROKER_ADDRESS}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - API_PORT=${API_PORT}
      - FACE_VERIFICATION_THRESHOLD=${FACE_VERIFICATION_THRESHOLD}
      - ENABLE_NOTIFICATIONS=${ENABLE_NOTIFICATIONS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - NOTIFICATION_PHONE_NUMBERS=${NOTIFICATION_PHONE_NUMBERS}
      - NTFY_TOPIC=${NTFY_TOPIC}
    volumes:
      - ./.env:/app/.env
      - ./api/certs:/app/certs
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
      deepface:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: ankane/pgvector:latest
    container_name: cses_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/zz_sample_data.sql
    # add the sample_data.sql file to the database.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "${MQTT_BROKER_PORT}:1883"
    volumes:
      - ./mqtt_broker/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt_broker/data:/mosquitto/data
      - ./mqtt_broker/log:/mosquitto/log
    networks:
      - app-network
    restart: unless-stopped

  # DeepFace Service Configuration
  deepface:
    image: serengil/deepface:latest
    container_name: deepface_service
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - DETECTOR_BACKEND=retinaface
      - MODEL_NAME=GhostFaceNet
      - ENFORCE_DETECTION=false
      - ALIGN=true
      - NORMALIZATION=base
      - INITIALIZE_MODELS=true
      - KEEP_ALL=true
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 2G
          cpus: '1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  # Give time for model loading
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    name: cses_postgres_data
