# decode a base64 string to an image

import base64
import io
from PIL import Image


# this is the base64 that we will be given
base64_string = "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---"

# decode the base64 string
image_data = base64.b64decode(base64_string)

# after decoding, save the image as a png and open it
# save it to this images folder: C:\Users\kaleb\Documents\00_College\Senior Capstone\api\static\images\esp32Images
image_path = "C:\\Users\\kaleb\\Documents\\00_College\\Senior Capstone\\api\\static\\images\\esp32Images\\image.png"

image = Image.open(io.BytesIO(image_data))
image.save(image_path)
image.show()
