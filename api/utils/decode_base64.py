# decode a base64 string to an image

import base64
import io
from PIL import Image


# this is the base64 that we will be given
base64_string = "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"

# decode the base64 string
image_data = base64.b64decode(base64_string)

# after decoding, save the image as a png and open it
# save it to this images folder: C:\Users\kaleb\Documents\00_College\Senior Capstone\api\static\images\esp32Images
image_path = "C:\\Users\\kaleb\\Documents\\00_College\\Senior Capstone\\api\\static\\images\\esp32Images\\image.png"

image = Image.open(io.BytesIO(image_data))
image.save(image_path)
image.show()
