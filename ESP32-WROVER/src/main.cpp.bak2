#include <Arduino.h>

// Define communication parameters directly for this test
#define MEGA_RX_PIN 12        // ESP32 receives on this pin from Mega TX (Pin 16)
#define MEGA_TX_PIN 13        // ESP32 transmits on this pin to Mega RX (Pin 17) - Not used in this test
#define MEGA_BAUD_RATE 115200 // Must match the Mega's Serial2.begin() rate

// Define expected message format directly
#define START_CHAR '$'
#define END_CHAR '#'
#define CMD_MOTION 'M'

// Define the HardwareSerial port for Mega communication (UART1)
HardwareSerial MegaSerial(1);

// Buffer for receiving data
char rxBuffer[64];
byte bufferIndex = 0;
bool messageStarted = false;

void setup()
{
    // 1. Initialize USB Serial for monitoring THIS ESP32
    Serial.begin(115200);
    unsigned long setupStartTime = millis();
    while (!Serial && millis() - setupStartTime < 3000)
        ; // Wait max 3s for Serial Monitor
    Serial.println("\n[ESP32 Barebones Receiver] Initializing...");

    // 2. Initialize Hardware Serial Port 1 for Mega Communication
    MegaSerial.begin(MEGA_BAUD_RATE, SERIAL_8N1, MEGA_RX_PIN, MEGA_TX_PIN);
    if (!MegaSerial)
    { // Check if pins are valid for UART
        Serial.println("[ESP32 Barebones Receiver] ERROR: Invalid pins for MegaSerial (UART1).");
        while (1)
            delay(10); // Halt
    }
    Serial.print("[ESP32 Barebones Receiver] MegaSerial (UART1) Initialized on RX:");
    Serial.print(MEGA_RX_PIN);
    Serial.print(" TX:");
    Serial.print(MEGA_TX_PIN);
    Serial.print(" at ");
    Serial.print(MEGA_BAUD_RATE);
    Serial.println(" baud.");

    Serial.println("[ESP32 Barebones Receiver] Waiting for '$M#' from Mega...");
}

void loop()
{
    // Check if data is available from the Mega
    while (MegaSerial.available() > 0)
    {
        char incomingChar = (char)MegaSerial.read();

        // --- Simple Message Parsing ---
        if (incomingChar == START_CHAR)
        {
            bufferIndex = 0;              // Reset buffer index
            messageStarted = true;        // Flag that message has started
            rxBuffer[bufferIndex] = '\0'; // Clear buffer initially
            // Don't store the start char itself
            continue; // Move to next character
        }

        if (messageStarted)
        {
            if (incomingChar == END_CHAR)
            {
                messageStarted = false;       // Message finished
                rxBuffer[bufferIndex] = '\0'; // Null-terminate the received command part

                // --- Check received command ---
                Serial.print("[ESP32 Barebones Receiver] Full message received: $");
                Serial.print(rxBuffer);
                Serial.println("#");

                if (bufferIndex == 1 && rxBuffer[0] == CMD_MOTION)
                {
                    // SUCCESS! Received $M#
                    Serial.println("************************************");
                    Serial.println("**       SUCCESS: Received $M#    **");
                    Serial.println("************************************");
                }
                else
                {
                    Serial.println("  -> Message received, but not $M#.");
                }

                bufferIndex = 0; // Reset for next message
            }
            else
            {
                // Store character in buffer if space allows
                if (bufferIndex < (sizeof(rxBuffer) - 1))
                {
                    rxBuffer[bufferIndex++] = incomingChar;
                }
                else
                {
                    // Buffer overflow - discard message
                    Serial.println("[ESP32 Barebones Receiver] ERROR: RX Buffer overflow. Discarding message.");
                    messageStarted = false;
                    bufferIndex = 0;
                }
            }
        }
        // If !messageStarted and it wasn't START_CHAR, ignore the character
    }

    // Add a small delay to be nice to the CPU
    delay(10);
}
