; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:main]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
upload_port = COM6
monitor_port = COM6

; Dependencies
lib_deps =
    knolleary/PubSubClient @ ^2.8
    bblanchon/ArduinoJson @ ^6.21.3
    agdl/Base64
    https://github.com/eloquentarduino/EloquentEsp32cam.git
    ; https://github.com/espressif/esp32-camera.git

build_flags =
    -D MQTT_MAX_PACKET_SIZE=30000
    -Os

board_build.partitions = huge_app.csv
# Specify the source filter for the main application code
build_src_filter = +<main.cpp> +<config.h> +<wifi/> +<mqtt/> +<leds/>
; +<serial_handler/>

; extra_scripts =
;     pre:connect_to_wifi.py


[env:test_serial_input_e]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
build_src_filter = +<tests/test_serial_input_e.cpp>
upload_port = COM6
monitor_port = COM6

[env:test_serial_input_rfid]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
upload_port = COM6
monitor_port = COM6

[env:test_serial_input_rfid_to_session]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
build_src_filter = 
  +<src/serial_handler/serial_handler.cpp>  # Source file with definitions
  +<tests/integration/test_serial_input_rfid_to_session.cpp> # The test file itself
upload_port = COM6
monitor_port = COM6


[env:test_unit_face_detection_complete_session]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000 # Or 2000000 if preferred
build_src_filter =
  +<src/config.h>          # Need config for pins, MQTT, etc.
  +<src/wifi/wifi.cpp>             # Need WiFi setup
  +<src/mqtt/mqtt.cpp>             # Need MQTT setup
  +<tests/unit/test_face_detection_complete_session.cpp>
lib_deps =
    # Dependencies needed for camera, MQTT, JSON, Base64
    knolleary/PubSubClient @ ^2.8
    bblanchon/ArduinoJson @ ^6.21.3
    agdl/Base64
    https://github.com/eloquentarduino/EloquentEsp32cam.git
build_flags = 
    -D MQTT_MAX_PACKET_SIZE=30000
    -Os
board_build.partitions = huge_app.csv # Ensure partition scheme allows large app/image data
upload_port = COM7
monitor_port = COM7

[env:test_unit_face_detection_incomplete_session]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000 # Or 2000000 if preferred
build_src_filter =
  +<src/config.h>          # Need config for pins, MQTT, etc.
  +<src/wifi/wifi.h>             # Need WiFi setup
  +<src/mqtt/mqtt.h>             # Need MQTT setup
  +<src/wifi/wifi.cpp>             # Need WiFi setup
  +<src/mqtt/mqtt.cpp>             # Need MQTT setup
  +<tests/unit/test_face_detection_incomplete_session.cpp>
lib_deps =
    # Dependencies needed for camera, MQTT, JSON, Base64
    knolleary/PubSubClient @ ^2.8
    bblanchon/ArduinoJson @ ^6.21.3
    agdl/Base64
    https://github.com/eloquentarduino/EloquentEsp32cam.git
build_flags = 
    -D MQTT_MAX_PACKET_SIZE=30000
    -Os
board_build.partitions = huge_app.csv # Ensure partition scheme allows large app/image data
upload_port = COM7
monitor_port = COM7

[env:test_serial_frame_echo]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
build_src_filter = +<tests/test_serial_frame_echo.cpp>
upload_port = COM6
monitor_port = COM6


[env:test_unit_wifi_connection]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
build_src_filter = +<tests/unit/test_wifi_connection.cpp>
upload_port = COM6
monitor_port = COM6

# --- Test Environments --- 
# Add other test environments above this line

[env:test_esp_rx_gpio_motion]
platform = espressif32
board = freenove_esp32_wrover
framework = arduino
monitor_speed = 115200
upload_speed = 1000000
build_src_filter = +<tests/unit/test_esp_rx_gpio_motion.cpp>
upload_port = COM6
monitor_port = COM6
# Add board_build options if needed (e.g., PSRAM, partitions)
# board_build.psram.type = qio
# board_build.filesystem = littlefs

# Add test_esp_rx_gpio_rfid environment here when created
[env:test_esp_rx_gpio_rfid]
platform = espressif32
board = freenove_esp32_wrover # Adjust if your specific board differs
framework = arduino
monitor_speed = 115200
src_dir = src/tests/unit # Specify the directory containing the test source
build_src_filter = +<tests/unit/test_esp_rx_gpio_rfid.cpp> # Filter relative to src_dir
upload_port = COM7
monitor_port = COM7
# Add board_build options if needed

[env:test_esp_gpio_state_machine]
platform = espressif32
board = freenove_esp32_wrover # Adjust if your specific board differs
framework = arduino
monitor_speed = 115200
src_dir = src/tests/integration # Note: Integration test location
build_src_filter = +<tests/integration/test_esp_gpio_state_machine.cpp>
upload_port = COM7
monitor_port = COM7
# Add board_build options if needed